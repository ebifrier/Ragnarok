<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ragnarok.Presentation</name>
    </assembly>
    <members>
        <member name="T:Ragnarok.Presentation.Control.ColorButton">
            <summary>
            ColorButton.xaml の相互作用ロジック
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorButton.ButtonName">
            <summary>
            ボタンのコントロール名。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorButton.ColorBrushName">
            <summary>
            色ブラシのコントロール名。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorButton.ColorChangedEvent">
            <summary>
            色変更時に呼ばれるイベントです。
            </summary>
        </member>
        <member name="E:Ragnarok.Presentation.Control.ColorButton.ColorChanged">
            <summary>
            色変更時に呼ばれるイベントです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorButton.ColorProperty">
            <summary>
            色を示す依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ColorButton.Color">
            <summary>
            色を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorButton.OnApplyTemplate">
            <summary>
            テンプレートが変わったときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorButton.UpdateColor(System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            色更新時などに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorButton.SelectColor(System.Object,Ragnarok.Presentation.Command.ExecuteRelayEventArgs)">
            <summary>
            色選択を行います。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorButton.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.CustomAdorner">
            <summary>
            コントロールサイズに自動でフィットするようなAdornerです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.CustomAdorner.AttachedProperty">
            <summary>
            添付プロパティからAdornerを設定するための添付プロパティです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.CustomAdorner.GetAttached(System.Windows.DependencyObject)">
            <summary>
            添付プロパティからAdornerを設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.CustomAdorner.SetAttached(System.Windows.DependencyObject,System.Windows.Controls.ControlTemplate)">
            <summary>
            添付プロパティからAdornerを設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.CustomAdorner.OnAttachedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            添付プロパティAttachedの設定時に初期化処理を行います。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.CustomAdorner.Attach(System.Windows.FrameworkElement,System.Windows.Controls.ControlTemplate)">
            <summary>
            ソース上からControlTemplateをAdornerを追加します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.CustomAdorner.AddToAdornerLayer">
            <summary>
            装飾層に登録します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.CustomAdorner.TemplateProperty">
            <summary>
            AdornerのTemplateを扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.CustomAdorner.Template">
            <summary>
            AdornerのTemplateを取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.CustomAdorner.OnTemplateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Templateの変更時に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.CustomAdorner.#ctor(System.Windows.FrameworkElement)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.CustomAdorner.VisualChildrenCount">
            <summary>
            Visual要素の子供の数を取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.CustomAdorner.GetVisualChild(System.Int32)">
            <summary>
            Visual要素の子供を取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.CustomAdorner.AdornerSize">
            <summary>
            Adornerの所望するサイズを取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.CustomAdorner.MeasureOverride(System.Windows.Size)">
            <summary>
            オーバーライド
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.CustomAdorner.ArrangeOverride(System.Windows.Size)">
            <summary>
            オーバーライド
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.EvaluationPointType">
            <summary>
            評価値の取得元を識別します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationPointType.ManualInput">
            <summary>
            手入力値を使います。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationPointType.User">
            <summary>
            ユーザーの評価値の平均値を使います。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationPointType.Server">
            <summary>
            評価値サーバーの値を使います。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.EvaluationControl">
            <summary>
            評価値ウィンドウです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.PointTypeProperty">
            <summary>
            評価値の取得元を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.PointType">
            <summary>
            評価値の取得元を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.ManualInputPointProperty">
            <summary>
            手入力による評価値を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.ManualInputPoint">
            <summary>
            手入力による評価値を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.UserPointProperty">
            <summary>
            リスナーによる評価値を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.UserPoint">
            <summary>
            リスナーによる評価値を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.ServerPointProperty">
            <summary>
            評価値サーバーの評価値を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.ServerPoint">
            <summary>
            評価値サーバーの評価値を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.EvaluationPointProperty">
            <summary>
            表示される評価値を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.EvaluationPoint">
            <summary>
            表示される評価値を取得します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.ImageSetListProperty">
            <summary>
            画像セットのリストを扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.ImageSetList">
            <summary>
            画像セットのリストを取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.SelectedImageSetProperty">
            <summary>
            選択された画像セットを扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.SelectedImageSet">
            <summary>
            選択された画像セットを取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.SelectedImageSetTitleProperty">
            <summary>
            選択された画像セット名を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.SelectedImageSetTitle">
            <summary>
            選択された画像セット名を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.SelectedImagePathProperty">
            <summary>
            選択された画像のパスを扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.SelectedImagePath">
            <summary>
            選択された画像のパスを取得します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.ServerAddressProperty">
            <summary>
            評価値サーバーのアドレスを扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.ServerAddress">
            <summary>
            評価値サーバーのアドレスを取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.ServerPortProperty">
            <summary>
            評価値サーバーのポート番号を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.ServerPort">
            <summary>
            評価値サーバーのポート番号を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.IsShowEvaluationPointProperty">
            <summary>
            評価値を表示するかどうかを扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.IsShowEvaluationPoint">
            <summary>
            評価値を表示するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.BackgroundColorProperty">
            <summary>
            評価値画像の背景色を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.BackgroundColor">
            <summary>
            評価値画像の背景色を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.IsShowEvaluationItemsInDialogProperty">
            <summary>
            設定ダイアログに評価値の設定項目を表示させるかどうかを扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.EvaluationControl.IsShowEvaluationItemsInDialog">
            <summary>
            設定ダイアログに評価値の設定項目を表示させるかどうかを取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.SettingUpdatedEvent">
            <summary>
            設定が更新されたときに呼ばれるイベントです。
            </summary>
        </member>
        <member name="E:Ragnarok.Presentation.Control.EvaluationControl.SettingUpdated">
            <summary>
            設定が更新されたときに呼ばれるイベントです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.EvaluationControl.OpenSettingDialog">
            <summary>
            設定ダイアログを開きます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationControl.ExecuteOpenSettingDialog(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            設定ダイアログを開きます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationControl.UpdateImageSetList">
            <summary>
            画像セットリストを更新します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationControl.UpdateImageSet">
            <summary>
            画像セットを更新します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationControl.UpdateImageSetTitle">
            <summary>
            画像セット名を更新します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationControl.UpdateImage">
            <summary>
            評価値表示用の画像を更新します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationControl.UpdatePoint">
            <summary>
            評価値を更新します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationControl.Connect">
            <summary>
            評価値サーバーへの接続を行います。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationControl.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationControl.InitializeBindings(System.Windows.UIElement)">
            <summary>
            コマンドのバインディングを行います。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationControl.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.EvaluationSettingDialog">
            <summary>
            EvaluationSettingDialog.xaml の相互作用ロジック
            </summary>
            <summary>
            EvaluationSettingDialog
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationSettingDialog.#ctor(Ragnarok.Presentation.Control.EvaluationControl)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationSettingDialog.ExecuteOK(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            OK
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationSettingDialog.ExecuteCancel(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Cancel
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.EvaluationSettingDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.TimeSpanView">
            <summary>
            TimeSpanオブジェクトの表示を行います。
            </summary>
            <remarks>
            普通に文字列化すると数字によってフォントサイズが微妙に違うらしく
            文字位置がずれてしまいます。
            </remarks>
        </member>
        <member name="M:Ragnarok.Presentation.Control.TimeSpanView.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.TimeSpanView.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.TimeSpanView.ValueProperty">
            <summary>
            表示する時間を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.TimeSpanView.Value">
            <summary>
            表示する時間を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.TimeSpanView.NumberWidthProperty">
            <summary>
            各数字の表示幅を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.TimeSpanView.NumberWidth">
            <summary>
            各数字の表示幅を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.TimeSpanView.MinValueTextProperty">
            <summary>
            TimeSpanがMinValueの時に表示される文字列を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.TimeSpanView.MinValueText">
            <summary>
            TimeSpanがMinValueの時に表示される文字列を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.TimeSpanView.MaxValueTextProperty">
            <summary>
            TimeSpanがMaxValueの時に表示される文字列を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.TimeSpanView.MaxValueText">
            <summary>
            TimeSpanがMaxValueの時に表示される文字列を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.TimeSpanView.ValueUpdated(System.TimeSpan)">
            <summary>
            時間更新時に呼ばれ、表示を更新します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.TimeSpanView.UpdateValueTexts(System.TimeSpan)">
            <summary>
            数字部分を更新します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.TimeSpanView.OnApplyTemplate">
            <summary>
            xamlファイル適用時に呼ばれます。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.TimeSpanEditControl">
            <summary>
            TimeSpanの変更に使うコントロールです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.TimeSpanEditControl.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.TimeSpanEditControl.ValueProperty">
            <summary>
            TimeSpanを扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.TimeSpanEditControl.Value">
            <summary>
            TimeSpanを取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.TimeSpanEditControl.CoerceValue(System.Windows.DependencyObject,System.Object)">
            <summary>
            TimeSpanが変更されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.TimeSpanEditControl.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TimeSpanが変更されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.TimeSpanEditControl.OnApplyTemplate">
            <summary>
            テンプレートが変わったときに呼ばれます。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.DecoratedTextBase">
            <summary>
            DecoratedText.xaml の相互作用ロジック
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.DecoratedTextBase.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.DecoratedTextBase.StrokeProperty">
            <summary>
            文字の縁取りを示す依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.DecoratedTextBase.Stroke">
            <summary>
            文字の縁を塗るブラシを取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.DecoratedTextBase.StrokeThicknessProperty">
            <summary>
            文字の縁取り幅を示す依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.DecoratedTextBase.StrokeThickness">
            <summary>
            文字の縁の太さを取得または設定します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.TimeSpanWindow">
            <summary>
            TimeSpanWindow.xaml の相互作用ロジック
            </summary>
            <summary>
            TimeSpanWindow
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.TimeSpanWindow.ValueProperty">
            <summary>
            TimeSpanを扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.TimeSpanWindow.Value">
            <summary>
            TimeSpanを取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.TimeSpanWindow.#ctor(System.TimeSpan)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.TimeSpanWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.MessageStatusBar">
            <summary>
            MessageStatusBar.xaml の相互作用ロジック
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.MessageStatusBar.ChildItemName">
            <summary>
            子要素のコントロール名。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.MessageStatusBar.StatusMessageProperty">
            <summary>
            ステータスメッセージ用の依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.MessageStatusBar.StatusMessage">
            <summary>
            ステータスメッセージを取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MessageStatusBar.OnStatusMessageChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ステータスメッセージ変更時に呼ばれます。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.MessageStatusBar.MessageBrushProperty">
            <summary>
            メッセージの表示色を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.MessageStatusBar.MessageBrush">
            <summary>
            メッセージの表示色を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.MessageStatusBar.ErrorMessageBrushProperty">
            <summary>
            エラーメッセージの表示色を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.MessageStatusBar.ErrorMessageBrush">
            <summary>
            エラーメッセージの表示色を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.MessageStatusBar.MessageDurationProperty">
            <summary>
            メッセージの表示期間を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.MessageStatusBar.MessageDuration">
            <summary>
            メッセージの表示期間を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.MessageStatusBar.StatusMessageShowEvent">
            <summary>
            ステータスメッセージの表示開始イベントです。
            </summary>
        </member>
        <member name="E:Ragnarok.Presentation.Control.MessageStatusBar.StatusMessageShow">
            <summary>
            ステータスメッセージの表示イベントです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MessageStatusBar.OnApplyTemplate">
            <summary>
            テンプレートの適用時に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MessageStatusBar.StartAnimation">
            <summary>
            メッセージのフェードアウト処理を行います。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MessageStatusBar.ResetMessage">
            <summary>
            メッセージを表示しないようにします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MessageStatusBar.SetMessage(System.String)">
            <summary>
            通常メッセージを設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MessageStatusBar.SetErrorMessage(System.String)">
            <summary>
            エラーメッセージを設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MessageStatusBar.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MessageStatusBar.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.VersionWindow">
            <summary>
            VersionWindow.xaml の相互作用ロジック
            </summary>
            <summary>
            VersionWindow
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.VersionWindow.AssemblyAccessorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.VersionWindow.AssemblyAccessor">
            <summary>
            アセンブリ情報を取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.VersionWindow.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.VersionWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.ColorDialog">
            <summary>
            ColorDialog.xaml の相互作用ロジック
            </summary>
            <summary>
            ColorDialog
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorDialog.SelectedColorProperty">
            <summary>
            選択された色を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ColorDialog.SelectedColor">
            <summary>
            選択された色を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorDialog.#ctor(System.Nullable{System.Windows.Media.Color})">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.BindOnEnterTextBox">
            <summary>
            Enterを押すとバインディングし直すテキストボックスです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.BindOnEnterTextBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            キーが押されたときに呼ばれます。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.ColorPicker.DoubleToIntegerStringConverter">
            <summary>
            double値を整数型の文字列に変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.DoubleToIntegerStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.DoubleToIntegerStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆変換します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.ColorPicker.ColorPicker">
            <summary>
            色選択ダイアログです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.ColorPicker.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorPicker.ColorPicker.SelectedColorProperty">
            <summary>
            選択された色を扱う依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorPicker.ColorPicker.FixedSliderColorProperty">
            <summary>
            スペクトルを固定するかどうかを扱う依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorPicker.ColorPicker.SelectedColorChangedEvent">
            <summary>
            選択色が変わった時に呼ばれるイベントです。
            </summary>
        </member>
        <member name="E:Ragnarok.Presentation.Control.ColorPicker.ColorPicker.SelectedColorChanged">
            <summary>
            選択色が変わった時に呼ばれるイベントを更新します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ColorPicker.ColorPicker.SelectedColor">
            <summary>
            選択色を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ColorPicker.ColorPicker.FixedSliderColor">
            <summary>
            スペクトルを固定するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.ColorPicker.OnApplyTemplate">
            <summary>
            テンプレート適用時に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.ColorPicker.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            依存プロパティ変更時に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.ColorPicker.UpdateColorSlidersBackground">
            <summary>
            各色のスライダーの背景色を設定します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.ColorPicker.ColorSlider">
            <summary>
            色を設定するためのスライダーです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorPicker.ColorSlider.LeftColorProperty">
            <summary>
            左端の色を示す依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorPicker.ColorSlider.RightColorProperty">
            <summary>
            右端の色を示す依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ColorPicker.ColorSlider.LeftColor">
            <summary>
            左端の色を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ColorPicker.ColorSlider.RightColor">
            <summary>
            右端の色を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.ColorSlider.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.ColorPicker.ColorUtils">
            <summary>
            色関連のユーティリティクラスです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.ColorUtils.FireSelectedColorChangedEvent(System.Windows.UIElement,System.Windows.RoutedEvent,System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            色変更を通知するイベントを発行します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.ColorUtils.BuildColor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Colorオブジェクトを作成します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.ColorUtils.ConvertRgbToHsv(System.Windows.Media.Color,System.Double@,System.Double@,System.Double@)">
            <summary>
            RGBをHSVに変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.ColorUtils.ConvertHsvToRgb(System.Double,System.Double,System.Double)">
            <summary>
            HSVをRGBに変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.ColorUtils.GetSpectrumColors(System.Int32)">
            <summary>
            スペクトルの色をまとめて取得します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.ColorPicker.HueToColorConverter">
            <summary>
            Hue値を色に変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HueToColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            変換メソッド
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HueToColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆変換メソッド
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.ColorPicker.HsvControl">
            <summary>
            HSVのスペクトルを表示するコントロールです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorPicker.HsvControl.HueProperty">
            <summary>
            Hue値を扱う依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorPicker.HsvControl.SaturationProperty">
            <summary>
            Sat値を扱う依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorPicker.HsvControl.ValueProperty">
            <summary>
            Value値を扱う依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorPicker.HsvControl.SelectedColorProperty">
            <summary>
            選択された色を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorPicker.HsvControl.SelectedColorChangedEvent">
            <summary>
            選択された色が変更されたときに呼ばれるイベントです。
            </summary>
        </member>
        <member name="E:Ragnarok.Presentation.Control.ColorPicker.HsvControl.SelectedColorChanged">
            <summary>
            色変更時に呼ばれるイベントを変更します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ColorPicker.HsvControl.Hue">
            <summary>
            Hue値を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ColorPicker.HsvControl.Saturation">
            <summary>
            Sat値を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ColorPicker.HsvControl.Value">
            <summary>
            Value値を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ColorPicker.HsvControl.SelectedColor">
            <summary>
            選択された色を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.OnHueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Hueが更新されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.OnSaturationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Satが更新されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Valueが更新されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.OnSelectedColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            色が更新されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.OnThumbDragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            サムネイルが移動したときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            サムネイルが移動したときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            マウスの左ボタンが押されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            サイズが更新されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.OnApplyTemplate">
            <summary>
            Template適用時に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.UpdateSelectedColor">
            <summary>
            色の更新処理を行います。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.LimitValue(System.Double,System.Double)">
            <summary>
            値を (0,max] の範囲に収めます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.UpdatePositionAndSaturationAndValue(System.Double,System.Double)">
            <summary>
            HSVコントロールで選択された色を示す○の位置から色を更新します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.UpdateThumbPosition">
            <summary>
            HSVコントロールで選択された色を示す○の位置を更新します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.HsvControl.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.ColorPicker.SpectrumSlider">
            <summary>
            スペクトルを移動するためのスライダーです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorPicker.SpectrumSlider.SpectrumColorCount">
            <summary>
            スペクトル背景の色の数です。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ColorPicker.SpectrumSlider.HueProperty">
            <summary>
            Hueの値を示す依存プロパティです。
            </summary>
        </member>
        <member name="E:Ragnarok.Presentation.Control.ColorPicker.SpectrumSlider.HueChanged">
            <summary>
            Hue値の変更時に呼ばれます。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ColorPicker.SpectrumSlider.Hue">
            <summary>
            Hue値を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.SpectrumSlider.OnHuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Hueプロパティが変更されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.SpectrumSlider.OnHuePropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Hueプロパティが変更されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.SpectrumSlider.OnValueChanged(System.Double,System.Double)">
            <summary>
            スライダーの値が変更されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.SpectrumSlider.SetBackground">
            <summary>
            スペクトルの背景色を設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.SpectrumSlider.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ColorPicker.SpectrumSlider.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.DecoratedText">
            <summary>
            DecoratedText.xaml の相互作用ロジック
            </summary>
            <remarks>
            <see cref="P:System.Windows.Controls.ContentControl.Content"/>
            は使えないので気をつけてください。
            代わりに<see cref="P:Ragnarok.Presentation.Control.DecoratedText.Text"/>を使ってください。
            </remarks>
        </member>
        <member name="F:Ragnarok.Presentation.Control.DecoratedText.ElementChildName">
            <summary>
            子コントロール名。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.DecoratedText.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.DecoratedText.IsUpdateVisualProperty">
            <summary>
            Visualオブジェクトの更新をするかどうかを示す依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.DecoratedText.TextProperty">
            <summary>
            表示文字列用の依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.DecoratedText.TextFormatProperty">
            <summary>
            表示文字列フォーマットの依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.DecoratedText.MaxCharCountProperty">
            <summary>
            １行の最大文字数を示す依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.DecoratedText.MaxLineCountProperty">
            <summary>
            最大行数を示す依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.DecoratedText.FormattedTextProperty">
            <summary>
            内部で使うFormattedTextオブジェクトを示す依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.DecoratedText.IsUpdateVisual">
            <summary>
            Visualオブジェクトの更新をするかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.DecoratedText.Text">
            <summary>
            表示文字列を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.DecoratedText.TextFormat">
            <summary>
            表示文字列のフォーマットを取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.DecoratedText.MaxCharCount">
            <summary>
            1行の最大文字数を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.DecoratedText.MaxLineCount">
            <summary>
            最大行数を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.DecoratedText.FormattedText">
            <summary>
            内部で使うFormattedTextオブジェクトを取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.DecoratedText.DisplayText">
            <summary>
            フォーマット済みの表示用文字列を取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.DecoratedText.TrimText(System.String)">
            <summary>
            必要なら指定文字数で切り詰めます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.DecoratedText.OnCoerceTextCallback(System.Windows.DependencyObject,System.Object)">
            <summary>
            入力された文字列をチェックします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.DecoratedText.OnPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            プロパティが変更されたときに、コンテンツを変更します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.DecoratedText.OnApplyTemplate">
            <summary>
            テンプレートが変わったときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.DecoratedText.UpdateContent">
            <summary>
            表示文字列を更新します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.NumericUpDown">
            <summary>
            NumericUpDown.xaml の相互作用ロジック
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.NumericUpDown.ElementTextName">
            <summary>
            テキストボックスのコントロール名。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.NumericUpDown.ElementUpButtonName">
            <summary>
            Upボタンのコントロール名。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.NumericUpDown.ElementDownButtonName">
            <summary>
            Downボタンのコントロール名。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.NumericUpDown.ValueChangedEvent">
            <summary>
            値変更時に呼ばれるイベントです。
            </summary>
        </member>
        <member name="E:Ragnarok.Presentation.Control.NumericUpDown.ValueChanged">
            <summary>
            値変更時に呼ばれるイベントです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.NumericUpDown.IsEditableProperty">
            <summary>
            テキストボックス上で数値を変更可能かどうかを示す依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.NumericUpDown.TextProperty">
            <summary>
            数値データを文字列として扱う依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.NumericUpDown.TextFormatProperty">
            <summary>
            数値データのフォーマットを扱う依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.NumericUpDown.ValueProperty">
            <summary>
            数値データの依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.NumericUpDown.StepProperty">
            <summary>
            移動ステップ値を扱う依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.NumericUpDown.MinimumProperty">
            <summary>
            最小値を扱う依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.NumericUpDown.MaximumProperty">
            <summary>
            最大値を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.NumericUpDown.IsEditable">
            <summary>
            テキストボックス上で数値を変更可能かどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.NumericUpDown.Text">
            <summary>
            値の文字列データを取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.NumericUpDown.TextFormat">
            <summary>
            値の文字列フォーマットを取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.NumericUpDown.Value">
            <summary>
            値を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.NumericUpDown.Step">
            <summary>
            移動ステップ値を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.NumericUpDown.Minimum">
            <summary>
            設定できる最小値を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.NumericUpDown.Maximum">
            <summary>
            設定できる最大値を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.SyncValueAndText(System.Decimal)">
            <summary>
            テキストと値の同期を取ります。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            値文字列が変更されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnTextFormatChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            値の表示フォーマットが変更されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.CoerceValueString(System.Windows.DependencyObject,System.Object)">
            <summary>
            値文字列の修正を行います。(054 -> 54 など)
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.ValidateText(System.Object)">
            <summary>
            値文字列が有効か確認をします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            値の変更時に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnCoerceValue(System.Windows.DependencyObject,System.Object)">
            <summary>
            値を[MinValue, MaxValue]の間に納めます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnMinimumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            最小値が変わったときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnCoerceMinimum(System.Windows.DependencyObject,System.Object)">
            <summary>
            必要なら設定された最小値を修正します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            最大値が変わったときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnCoerceMaximum(System.Windows.DependencyObject,System.Object)">
            <summary>
            必要なら設定された最大値を修正します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
            <summary>
            アクセラレータキーが押されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnApplyTemplate">
            <summary>
            テンプレートが変わったときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.upButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            値を増やします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.downButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            値を減らします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            コントロールがフォーカスを受け取ったときは
            テキストボックスをフォーカスします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            キーが押されたときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnIncrement">
            <summary>
            値を増やします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.OnDecrement">
            <summary>
            値を減らします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.NumericUpDown.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.ProgressDialog">
            <summary>
            ProgressDialog.xaml の相互作用ロジック
            </summary>
            <summary>
            ProgressDialog
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ProgressDialog.CancelEvent">
            <summary>
            キャンセル時に呼ばれるイベントを定義します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ProgressDialog.CompletedEvent">
            <summary>
            操作完了時に呼ばれるイベントを定義します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ProgressDialog.IsCanceledProperty">
            <summary>
            操作がキャンセルされたかどうかを示す依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ProgressDialog.IsFaultedProperty">
            <summary>
            操作が失敗したかどうかを示す依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.ProgressDialog.ExceptionProperty">
            <summary>
            操作が失敗したときの例外を示す依存プロパティです。
            </summary>
        </member>
        <member name="E:Ragnarok.Presentation.Control.ProgressDialog.Cancel">
            <summary>
            キャンセル時に呼ばれるイベントを追加または削除します。
            </summary>
        </member>
        <member name="E:Ragnarok.Presentation.Control.ProgressDialog.Completed">
            <summary>
            操作完了時に呼ばれるイベントを追加または削除します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ProgressDialog.IsCanceled">
            <summary>
            操作がキャンセルされたかどうかを取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ProgressDialog.IsFaulted">
            <summary>
            操作が失敗したかどうかを取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.ProgressDialog.Exception">
            <summary>
            失敗時の例外を取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ProgressDialog.RaiseCancelEvent">
            <summary>
            キャンセルイベントを発火します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ProgressDialog.RaiseCompletedEvent">
            <summary>
            完了時のイベントを発火します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ProgressDialog.DoCancel(System.Boolean)">
            <summary>
            キャンセルボタンクリック時に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ProgressDialog.TaskCompleted(System.Threading.Tasks.Task)">
            <summary>
            操作完了時に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ProgressDialog.#ctor(System.Action)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ProgressDialog.CancelBUtton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            キャンセルボタンクリック時に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.ProgressDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.WatermarkTextBox">
            <summary>
            ウォーターマーク付きのテキストボックスクラスです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.WatermarkTextBox.SelectAllOnGotFocusProperty">
            <summary>
            フォーカスを得た時、テキストを全選択するかどうかを決める依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.WatermarkTextBox.SelectAllOnGotFocus">
            <summary>
            フォーカスを得た時、テキストを全選択するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.WatermarkTextBox.WatermarkProperty">
            <summary>
            ウォーターマークを扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.WatermarkTextBox.Watermark">
            <summary>
            ウォーターマークを取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.WatermarkTextBox.WatermarkTemplateProperty">
            <summary>
            ウォーターマークのテンプレートを扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.WatermarkTextBox.WatermarkTemplate">
            <summary>
            ウォーターマークのテンプレートを取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.WatermarkTextBox.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.WatermarkTextBox.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            キーフォーカスを得た時に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.WatermarkTextBox.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            マウスの左ボタンイベントを事前に処理します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.WindowOperation.IWindowOperationStarter">
            <summary>
            ウィンドウの移動などを開始するための基底クラスです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.WindowOperation.IWindowOperationStarter.GetCursor(System.Windows.Point)">
            <summary>
            そこでのカーソルを取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.WindowOperation.IWindowOperationStarter.BeginOperation(System.Windows.Point)">
            <summary>
            オペレーションを開始します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.WindowOperation.WindowOperationBase">
            <summary>
            ウィンドウの移動を行うための基底クラスです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.WindowOperation.WindowOperationBase.Window">
            <summary>
            対象となるウィンドウを取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.WindowOperation.WindowOperationBase.Begin(System.Windows.Point)">
            <summary>
            オペレーションを開始します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.WindowOperation.WindowOperationBase.Operate(System.Windows.Point)">
            <summary>
            オペレーションを行います。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.WindowOperation.WindowOperationBase.End">
            <summary>
            オペレーションを終了します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.WindowOperation.WindowOperationBase.#ctor(Ragnarok.Presentation.Control.MovableWindow)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.WindowOperation.WindowMoverStarter">
            <summary>
            ウィンドウの移動を開始します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.WindowOperation.WindowMover">
            <summary>
            ウィンドウの移動を行います。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.WindowOperation.WindowEdge">
            <summary>
            マウスのあるウィンドウ上の位置を判別します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.WindowOperation.WindowScalerStarter">
            <summary>
            ウィンドウのリサイズを開始します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.WindowOperation.WindowScalerStarter.GetWindowEdge(System.Windows.Point)">
            <summary>
            ウィンドウ上のエッジ位置を取得します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.WindowOperation.WindowScaler">
            <summary>
            ウィンドウのリサイズを行います。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.MovableWindow">
            <summary>
            枠のない移動可能なウィンドウです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.MovableWindow.MakeMoveWindow">
            <summary>
            ウィンドウを可動状態にするためのコマンドです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.MovableWindow.MakeFixWindow">
            <summary>
            ウィンドウを固定状態にするためのコマンドです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.MovableWindow.IsMovableProperty">
            <summary>
            ウィンドウが移動可能かどうかを示す依存プロパティです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.MovableWindow.EdgeLengthProperty">
            <summary>
            サイズを変更するときの枠の長さを示す依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.MovableWindow.IsMovable">
            <summary>
            ウィンドウが移動可能かどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.MovableWindow.EdgeLength">
            <summary>
            サイズ変更時の枠の長さを取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MovableWindow.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            マウスの左ボタン押下時に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MovableWindow.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            マウスの移動時に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MovableWindow.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            マウスの左ボタン押下後に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MovableWindow.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MovableWindow.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MovableWindow.InitializeCommand">
            <summary>
            コマンドを初期化します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MovableWindow.CanExecuteCommand(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            コマンドの実行可能性を取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MovableWindow.ExecuteMakeMoveWindow(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            ウィンドウを移動可能状態にします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MovableWindow.ExecuteMakeFixWindow(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            ウィンドウを移動不可能状態にします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.MovableWindow.ExecuteClose(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            ウィンドウを閉じます。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Control.GenericDialog">
            <summary>
            ２つのボタンを持つダイアログです。
            </summary>
            <remarks>
            デフォルトのダイアログでは
            1. 最前面じゃないウィンドウから最前面の表示指定ができない
            2. 位置指定ができない
            ため、このようなクラスを作ります。
            </remarks>
        </member>
        <member name="F:Ragnarok.Presentation.Control.GenericDialog.ElementButton1Name">
            <summary>
            ボタン1のコントロール名。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.GenericDialog.ElementButton2Name">
            <summary>
            ボタン2のコントロール名。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.GenericDialog.MessageProperty">
            <summary>
            メッセージ依存プロパティ
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.GenericDialog.ResultButtonProperty">
            <summary>
            結果的に押されたボタンを識別するための依存プロパティ
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.GenericDialog.Button1TextProperty">
            <summary>
            ボタン1のタイトル依存プロパティ
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.GenericDialog.Button1KindProperty">
            <summary>
            ボタン1のボタン種別依存プロパティ
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.GenericDialog.Button2TextProperty">
            <summary>
            ボタン2のタイトル依存プロパティ
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Control.GenericDialog.Button2KindProperty">
            <summary>
            ボタン2のボタン種別依存プロパティ
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.GenericDialog.Message">
            <summary>
            メッセージを取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.GenericDialog.ResultButton">
            <summary>
            結果的に押されたボタンを取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.GenericDialog.Button1Text">
            <summary>
            ボタン1のタイトルを取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.GenericDialog.Button1Kind">
            <summary>
            ボタン1の種別を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.GenericDialog.Button2Text">
            <summary>
            ボタン1のタイトルを取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Control.GenericDialog.Button2Kind">
            <summary>
            ボタン1の種別を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.GenericDialog.SetFocusButton(System.Windows.MessageBoxResult)">
            <summary>
            指定のボタンにフォーカスを当てます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.GenericDialog.SetFocusButtonNum(System.Int32)">
            <summary>
            指定のボタンにフォーカスを当てます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.GenericDialog.OnApplyTemplate">
            <summary>
            テンプレートが変わったときに呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.GenericDialog.OnSourceInitialized(System.EventArgs)">
            <summary>
            アイコンを非表示にします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.GenericDialog.button1_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            ボタン2
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.GenericDialog.button2_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            ボタン1
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.GenericDialog.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.GenericDialog.CheckButton(System.Windows.Controls.Button)">
            <summary>
            指定のボタンが正しく機能するボタンか調べます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.GenericDialog.Dialog_Loaded(System.Object,System.EventArgs)">
            <summary>
            ボタンのフォーカスを変更します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Control.GenericDialog.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.SignEmphasizeConverter">
            <summary>
            +/-符号を目立つように大文字化します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.SignEmphasizeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            +/-符号を目立つように大文字化します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.SignEmphasizeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            基の値に戻すことはできないので、値をそのまま返す。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.ValueCompareToBooleanConverter">
            <summary>
            値を比較し一致するかどうか調べます。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Converter.ValueCompareToBooleanConverter.TrueObject">
            <summary>
            真の時使われるオブジェクトを取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Converter.ValueCompareToBooleanConverter.FalseObject">
            <summary>
            偽の時使われるオブジェクトを取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ValueCompareToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            値が一致するか調べます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ValueCompareToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            真偽値を対象となる値に直します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.FontFamilyConverter">
            <summary>
            文字列からフォントファミリに変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.FontFamilyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            文字列からフォントファミリに変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.FontFamilyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            フォントファミリから文字列に変換します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.ValueToDecimalConverter">
            <summary>
            値をdecimal型に直します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Converter.ValueToDecimalConverter.SourceType">
            <summary>
            変換元の型を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ValueToDecimalConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            decimal値に変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ValueToDecimalConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            変換元の型に戻します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.ColorAlphaConverter">
            <summary>
            色のアルファ値を変更します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ColorAlphaConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            色のアルファ値を変更します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ColorAlphaConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            実装されていません。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.ColorToSolidColorBrushConverter">
            <summary>
            色をSolidColorBrushに変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ColorToSolidColorBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            色をブラシに変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ColorToSolidColorBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            単色ブラシからその色を取得します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.ImageConverter">
            <summary>
            画像のURIからイメージに変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ImageConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            URLから画像を読み込みます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ImageConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            実装されていません。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.IntToFullWidthStringConverter">
            <summary>
            整数値を全角数字の文字列に変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.IntToFullWidthStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            整数値を全角数字の文字列に変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.IntToFullWidthStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            実装されていません。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.MultiValueConverter">
            <summary>
            複数のパラメーターを与えるときに使います。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.MultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            複数の値をパラメーター値に変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.MultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.EnumToBooleanConverter">
            <summary>
            列挙子と真偽値の変換を行います。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.EnumToBooleanConverter.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.EnumToBooleanConverter.#ctor(System.Type)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Converter.EnumToBooleanConverter.EnumType">
            <summary>
            対象となる列挙型を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.EnumToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            列挙子の値と<paramref name="parameter"/>で与えられた
            値を比較し、同一なら真を返します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.EnumToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            真偽値を列挙子の値に直します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.ReverseConverter`1">
            <summary>
            ObservableCollectionを逆順で表示します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ReverseConverter`1.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            コレクションを逆順に並び替えます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ReverseConverter`1.DataCollectionChanged(System.Collections.ObjectModel.ObservableCollection{`0},System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            リスト変更時に逆順のリストも更新します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ReverseConverter`1.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            実装されていません。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.StringReverseConverter">
            <summary>
            StringのObservableCollectionを逆順に並び替えます。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.RoundingMode">
            <summary>
            整数値に変換するときの方法です。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Converter.RoundingMode.Floor">
            <summary>
            切り下げ
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Converter.RoundingMode.Ceil">
            <summary>
            切り上げ
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Converter.RoundingMode.Round">
            <summary>
            四捨五入
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.ValueToIntConverter">
            <summary>
            値を整数型に直します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Converter.ValueToIntConverter.RoundingMode">
            <summary>
            整数値に丸める方法を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ValueToIntConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            整数値に変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ValueToIntConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            基の値に戻すことはできないので、値をそのまま返す。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.ValueToIntConverter.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Converter.BooleanToVisibilityConverter">
            <summary>
            真偽値などをVisibilityの値に変換します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Converter.BooleanToVisibilityConverter.DefaultHiddenValue">
            <summary>
            非表示の時の規定値を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            真偽値などをVisibilityの値に変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Converter.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Visibilityの値を真偽値に変換します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Effect.GrayscaleEffect">
            <summary>
            グレースケールに変換するためのエフェクトです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Effect.GrayscaleEffect.InputProperty">
            <summary>
            入力画像を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Effect.GrayscaleEffect.Input">
            <summary>
            入力画像を取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Effect.GrayscaleEffect.DesaturationFactorProperty">
            <summary>
            係数を扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Effect.GrayscaleEffect.DesaturationFactor">
            <summary>
            係数を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Effect.GrayscaleEffect.#cctor">
            <summary>
            静的コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Effect.GrayscaleEffect.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Command.ExecuteRelayEventArgs">
            <summary>
            <seeref name="RelayCommand"/>の実行時に使うイベント引数です。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Command.ExecuteRelayEventArgs.Command">
            <summary>
            コマンドを取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Command.ExecuteRelayEventArgs.Parameter">
            <summary>
            コマンドパラメーターを取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Command.ExecuteRelayEventArgs.#ctor(System.Windows.Input.ICommand)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Command.ExecuteRelayEventArgs.#ctor(System.Windows.Input.ICommand,System.Object)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Command.CanExecuteRelayEventArgs">
            <summary>
            <seeref name="RelayCommand"/>の実行可否を調べるためのイベント引数です。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Command.CanExecuteRelayEventArgs.Command">
            <summary>
            コマンドを取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Command.CanExecuteRelayEventArgs.Parameter">
            <summary>
            コマンドパラメーターを取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Command.CanExecuteRelayEventArgs.CanExecute">
            <summary>
            コマンドが実行可能かどうかを取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Command.CanExecuteRelayEventArgs.#ctor(System.Windows.Input.ICommand)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Command.CanExecuteRelayEventArgs.#ctor(System.Windows.Input.ICommand,System.Object)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Command.RelayCommand">
            <summary>
            コマンドをデリゲートで実行するようなクラスです。
            </summary>
        </member>
        <member name="E:Ragnarok.Presentation.Command.RelayCommand.CanExecuteChanged">
            <summary>
            コマンドの実行可能状態の変更を調べるイベントを追加または削除します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Command.RelayCommand.Execute(System.Object)">
            <summary>
            コマンドを実行します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Command.RelayCommand.CanExecute(System.Object)">
            <summary>
            コマンドの実行可能状態を調べます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Command.RelayCommand.#ctor(System.EventHandler{Ragnarok.Presentation.Command.ExecuteRelayEventArgs},System.EventHandler{Ragnarok.Presentation.Command.CanExecuteRelayEventArgs})">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Command.RelayCommand.#ctor(System.EventHandler{Ragnarok.Presentation.Command.ExecuteRelayEventArgs})">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.BindingProxy">
            <summary>
            何らかの事情でDataContextを使えない場合に
            モデルデータを迂回して参照するためのクラスです。
            </summary>
            <example>
            &lt;r:BindingProxy x:Key="proxy" /&gt;
            
            &lt;Grid x:Key="grid"
                  Width="{Binding Data.Width,
                                  Source={StaticResource proxy}}"
                  Height="{Binding Data.Height,
                                  Source={StaticResource proxy}}" /&gt;
            &lt;/Grid&gt;
            
            ソースコードのどこかでproxy.Dataを設定する。
            </example>
        </member>
        <member name="F:Ragnarok.Presentation.Utility.BindingProxy.DataProperty">
            <summary>
            実際のモデルデータを扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Utility.BindingProxy.Data">
            <summary>
            実際のモデルデータを取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.BindingProxy.CreateInstanceCore">
            <summary>
            Freezableを継承するために必要です。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.ControlUtil">
            <summary>
            WPFコントロール用の便利クラス
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.ControlUtil.RemoveIcon(System.Windows.Window)">
            <summary>
            ウィンドウの左上のアイコンを非表示にします。
            windows限定のコード
            </summary>
            <remarks>
            OnSourceInitializedで呼ぶのが一般的です。
            </remarks>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.DataGridUtil">
            <summary>
            This class contains a few useful extenders for the DataGrid
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Utility.DataGridUtil.AutoScrollToEndProperty">
            <summary>
            リストを自動で終端までスクロールさせるための添付プロパティです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.DataGridUtil.GetAutoScrollToEnd(System.Windows.DependencyObject)">
            <summary>
            DataGridを自動で終端までスクロールさせるかどうかを取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.DataGridUtil.SetAutoScrollToEnd(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            DataGridを自動で終端までスクロールさせるかどうかを設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.DataGridUtil.OnAutoScrollToEndChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DataGridを一番下までスクロールさせます。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.FrameEventArgs">
            <summary>
            各フレームで呼ばれるイベントの引数です。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Utility.FrameEventArgs.ElapsedTime">
            <summary>
            フレーム時間を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.FrameEventArgs.#ctor(System.TimeSpan)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.FrameTimer">
            <summary>
            各フレームの時間を固定します。
            </summary>
        </member>
        <member name="E:Ragnarok.Presentation.Utility.FrameTimer.EnterFrame">
            <summary>
            各フレームごとに呼ばれるイベントです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Utility.FrameTimer.Dispatcher">
            <summary>
            所望するFPSを取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Utility.FrameTimer.TargetFPS">
            <summary>
            所望するFPSを取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Utility.FrameTimer.FrameTime">
            <summary>
            フレーム時間を取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.FrameTimer.PrepareToNextRender">
            <summary>
            次のフレームのためのイベント呼び出しを準備します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.FrameTimer.WaitNextFrame">
            <summary>
            次フレームまで待ちます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.FrameTimer.UpdateFrame(System.Object,System.EventArgs)">
            <summary>
            各フレームの処理を行います。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.FrameTimer.Start">
            <summary>
            タイマー処理を開始します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.FrameTimer.Stop">
            <summary>
            タイマー処理を停止します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.FrameTimer.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.FrameTimer.#ctor(System.Double,System.EventHandler{Ragnarok.Presentation.Utility.FrameEventArgs},System.Windows.Threading.Dispatcher)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.FrameTimer.Finalize">
            <summary>
            ファイナライズ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.FrameTimer.Dispose">
            <summary>
            オブジェクトを破棄します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.FrameTimer.Dispose(System.Boolean)">
            <summary>
            オブジェクトを破棄します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.HolderObject`1">
            <summary>
            intやdoubleなどの値を保持します。
            </summary>
            <remarks>
            obj.Valueで値の取得・設定がしたいことがあるため作りました。
            </remarks>
        </member>
        <member name="F:Ragnarok.Presentation.Utility.HolderObject`1.ValueProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Utility.HolderObject`1.Value">
            <summary>
            値を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.HolderObject`1.CreateInstanceCore">
            <summary>
            新しいインスタンスを作ります。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.HolderObject`1.#ctor(`0)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.HolderObject`1.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.HolderObject`1.op_Explicit(Ragnarok.Presentation.Utility.HolderObject{`0})~`0">
            <summary>
            T型に変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.HolderObject`1.op_Explicit(`0)~Ragnarok.Presentation.Utility.HolderObject{`0}">
            <summary>
            このオブジェクトに変換します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.DoubleObject">
            <summary>
            doubleを扱うホルダーオブジェクトです。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.ImageUtil">
            <summary>
            画像処理に関する機能を提供します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.ImageUtil.LoadImage(System.String)">
            <summary>
            画像ファイルを読み込みます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.ImageUtil.SaveImage(System.String,System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            画像ファイルを保存します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.PseudoKeyboard">
            <summary>
            キー操作を疑似的に行います。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.PseudoKeyboard.PressKeyWait(System.Windows.Input.Key,System.Int32)">
            <summary>
            指定された時間[ms]、指定のキーを押します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.PseudoKeyboard.PressKeyWait(System.Windows.Input.Key,System.TimeSpan)">
            <summary>
            指定された時間、指定のキーを押します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.ShortCutKey">
            <summary>
            ShortCutKeyです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Utility.ShortCutKey.Key">
            <summary>
            キーを取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Utility.ShortCutKey.IsShift">
            <summary>
            シフトキーが押されているか取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Utility.ShortCutKey.IsAlt">
            <summary>
            アルトキーが押されているか取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Utility.ShortCutKey.IsCtrl">
            <summary>
            コントロールキーが押されているか取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.ShortCutKey.Equals(System.Object)">
            <summary>
            オブジェクトを比較します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.ShortCutKey.Equals(Ragnarok.Presentation.Utility.ShortCutKey)">
            <summary>
            オブジェクトを比較します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.ShortCutKey.GetHashCode">
            <summary>
            ハッシュ値を計算します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.ShortCutKey.ToString">
            <summary>
            文字列化します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.KeyHookEventArgs">
            <summary>
            KeyEventの引数です。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Utility.KeyHookEventArgs.ShortCutKey">
            <summary>
            キーを取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.KeyHookEventArgs.#ctor(Ragnarok.Presentation.Utility.ShortCutKey)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.KeyHook">
            <summary>
            グローバルキーフックを行うためのクラスです。
            dll 内で使わないとプロセスを越えたキーフックが行えません。
            
            参照: http://www.shise.net/wiki/wiki.cgi?page=C%23%2FClass%2FLowLevelKeyHook
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Utility.KeyHook.keyboardProc">
            <summary>
            デリゲートオブジェクトをメンバで持たないとガベコレされます(;;)
            </summary>
        </member>
        <member name="E:Ragnarok.Presentation.Utility.KeyHook.KeyDown">
            <summary>
            キーが押されたときに呼ばれるイベントです。
            </summary>
        </member>
        <member name="E:Ragnarok.Presentation.Utility.KeyHook.KeyUp">
            <summary>
            キーが離されたときに呼ばれるイベントです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.KeyHook.BeginHook">
            <summary>
            キーフックを開始します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.KeyHook.EndHook">
            <summary>
            キーフックを終了します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.KeyHook.KeyboardCallback(System.Int32,System.IntPtr,Ragnarok.Presentation.Utility.KeyHook.KBDLLHOOKSTRUCT@)">
            <summary>
            キーフック時に呼ばれるコールバックメソッドです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.KeyHook.OnKeyEvent(System.EventHandler{Ragnarok.Presentation.Utility.KeyHookEventArgs},System.Windows.Input.Key)">
            <summary>
            キーイベントを呼び出します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.KeyHook.ChangeModifier(System.Int32@,System.Int32,System.Boolean)">
            <summary>
            キー修飾子を修正します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.KeyHook.UpdateModifiers(System.Windows.Input.Key,System.Boolean)">
            <summary>
            修飾キーの状態を更新します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.KeyHook.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.KeyHook.Finalize">
            <summary>
            デストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.KeyHook.Dispose">
            <summary>
            オブジェクトを破棄します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.KeyHook.Dispose(System.Boolean)">
            <summary>
            オブジェクトを破棄します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.ListBoxUtil">
            <summary>
            This class contains a few useful extenders for the ListBox
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Utility.ListBoxUtil.AutoScrollToEndProperty">
            <summary>
            リストを自動で終端までスクロールさせるための添付プロパティです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.ListBoxUtil.GetAutoScrollToEnd(System.Windows.DependencyObject)">
            <summary>
            リストを自動で終端までスクロールさせるかどうかを取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.ListBoxUtil.SetAutoScrollToEnd(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            リストを自動で終端までスクロールさせるかどうかを設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.ListBoxUtil.OnAutoScrollToEndChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ListBoxを一番下までスクロールさせます。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.WebBrowserUtil">
            <summary>
            WebBrowserクラス用のSourceプロパティへのBinding機能を提供します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Utility.WebBrowserUtil.BindableSourceProperty">
            <summary>
            WebBrowser クラスの Source プロパティへの Binding 機能を提供する為の依存プロパティです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.WebBrowserUtil.GetBindableSource(System.Windows.DependencyObject)">
            <summary>
            BindableSourceProperty を取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.WebBrowserUtil.SetBindableSource(System.Windows.DependencyObject,System.String)">
            <summary>
            BindableSourceProperty を設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.WebBrowserUtil.BindableSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            BindableSourceProperty が変更された時に発生します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.TextBoxUtil">
            <summary>
            TextBoxに関する拡張機能を提供します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Utility.TextBoxUtil.AutoHorizontalScrollToEndProperty">
            <summary>
            テキスト表示を自動で右端までスクロールさせるための添付プロパティです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.TextBoxUtil.GetAutoHorizontalScrollToEnd(System.Windows.DependencyObject)">
            <summary>
            テキスト表示を自動で右端までスクロールさせるかどうかを取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.TextBoxUtil.SetAutoHorizontalScrollToEnd(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            テキスト表示を自動で右端までスクロールさせるかどうかを設定します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Utility.PasswordBindingBehavior">
            <summary>
            PasswordBoxのPasswordプロパティにバインディングするためのビヘイビアです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Utility.PasswordBindingBehavior.PasswordProperty">
            <summary>
            パスワードを扱う依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Utility.PasswordBindingBehavior.Password">
            <summary>
            パスワードを取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.PasswordBindingBehavior.OnAttached">
            <summary>
            アタッチ時に呼ばれます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Utility.PasswordBindingBehavior.OnDetaching">
            <summary>
            デタッチ時に呼ばれます。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Debug.ReportType">
            <summary>
            報告する内容の種別です。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Debug.ReportType.Demand">
            <summary>
            要望
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Debug.ReportType.Error">
            <summary>
            エラー報告
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Debug.ReportType.ErrorWithLog">
            <summary>
            エラー報告（ログ付き）
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Debug.ReportType.Other">
            <summary>
            その他
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Debug.ReportDialogModel">
            <summary>
            エラー報告時に使うダイアログのモデルオブジェクトです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Debug.ReportDialogModel.ReportType">
            <summary>
            報告する内容種別を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Debug.ReportDialogModel.IsUseErrorLog">
            <summary>
            エラーログを送信するかどうかを取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Debug.ReportDialogModel.ReportText">
            <summary>
            報告内容を取得または設定します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Debug.ReportDialogModel.ErrorLogText">
            <summary>
            エラーログ内容を取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Debug.ReportDialogModel.OpenErrorLog(System.String)">
            <summary>
            ファイルからログ内容を読み込みます。エンコーディングは
            環境ごとのデフォルトが使われます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Debug.ReportDialogModel.OpenErrorLog(System.String,System.Text.Encoding)">
            <summary>
            ファイルからログ内容を読み込みます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Debug.ReportDialogModel.ReadErrorLines(System.IO.StreamReader)">
            <summary>
            各エラー行は空行だけの行で区切られています。
            その区切りごとにエラーを取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Debug.ReportDialogModel.IsNotIgnoreError(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            ログ送信するエラーか調べます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Debug.ReportDialogModel.MakeSendData(System.Net.Mail.SmtpClient@,System.Net.Mail.MailMessage@)">
            <summary>
            送信するデータを作成します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Debug.ReportDialogModel.SendMail(System.Net.Mail.SmtpClient,System.Net.Mail.MailMessage)">
            <summary>
            メールを送信します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Debug.ReportDialogModel.SendReport">
            <summary>
            ログを送信します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Debug.SendLogDialog">
            <summary>
            SendLogDialog.xaml の相互作用ロジック
            </summary>
            <summary>
            SendLogDialog
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Debug.SendLogDialog.#ctor(Ragnarok.Presentation.Debug.ReportDialogModel)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Debug.SendLogDialog.ExecuteOK(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            ログを送信します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Debug.SendLogDialog.ExecuteCancel(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            ログ送信をキャンセルします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Debug.SendLogDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.RagnarokCommands">
            <summary>
            ダイアログ関連のコマンドです。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.RagnarokCommands.OK">
            <summary>
            OKボタンコマンド。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.RagnarokCommands.Cancel">
            <summary>
            キャンセルボタンコマンド。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.RagnarokCommands.Yes">
            <summary>
            Yesボタンコマンド。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.RagnarokCommands.No">
            <summary>
            Noボタンコマンド。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.RagnarokCommands.NavigateUrl">
            <summary>
            指定のURLを開きます。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.RagnarokCommands.SendErrorLog">
            <summary>
            エラーログを送信します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.RagnarokCommands.CheckToUpdate">
            <summary>
            新バージョンの確認を行います。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.RagnarokCommands.ShowVersion">
            <summary>
            バージョンを表示します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.RagnarokCommands.#cctor">
            <summary>
            デフォルトコマンドをバインディングします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.RagnarokCommands.ExecuteYes(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            OK/YES
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.RagnarokCommands.ExecuteNo(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Cancel/NO
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.RagnarokCommands.ExecuteNavigateUrl(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            指定のURLをブラウザで開きます。
            </summary>
            <remarks>
            Parameterにurlを指定してください。
            </remarks>
        </member>
        <member name="M:Ragnarok.Presentation.RagnarokCommands.ExecuteSendErrorLog(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            エラーログを送信します。
            </summary>
            <remarks>
            Parameterにエラーログのファイル名を指定してください。
            </remarks>
        </member>
        <member name="M:Ragnarok.Presentation.RagnarokCommands.ExecuteCheckToUpdate(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            新バージョンの確認を行います。
            </summary>
            <remarks>
            ParameterにPresentationUpdaterのオブジェクトを
            指定してください。
            </remarks>
        </member>
        <member name="M:Ragnarok.Presentation.RagnarokCommands.ExecuteShowVersion(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            バージョンを表示します。
            </summary>
            <remarks>
            Parameterにアセンブリ名を指定してください。
            nullの場合はEntryAssemblyのバージョンを表示します。
            </remarks>
        </member>
        <member name="T:Ragnarok.Presentation.FontInfo">
            <summary>
            フォントにまつわる情報をまとめて保持します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.FontInfo.Family">
            <summary>
            フォントファミリを取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.FontInfo.Size">
            <summary>
            フォントサイズを取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.FontInfo.Style">
            <summary>
            フォントスタイルを取得または設定します。
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.FontInfo.Weight">
            <summary>
            フォントの太さを取得または設定します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.DialogUtil">
            <summary>
            確認メッセージなどのダイアログを作成します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.CreateOKDialog">
            <summary>
            'はい'のみを出すダイアログを作成します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.CreateOKCancelDialog">
            <summary>
            'はい/キャンセル'を出すダイアログを作成します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.CreateYesNoDialog">
            <summary>
            はい/いいえを出すダイアログを作成します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.CreateDialog(System.Windows.MessageBoxButton)">
            <summary>
            ボタン種別からダイアログを作成します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.CreateDialog(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton)">
            <summary>
            一般的なダイアログ表示用メソッドです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.CreateDialog(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxResult)">
            <summary>
            一般的なダイアログ表示用メソッドです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.CreateDialog(System.String,System.String,System.Windows.MessageBoxButton)">
            <summary>
            一般的なダイアログ表示用メソッドです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.AdjustInDisplay(System.Windows.Window)">
            <summary>
            ウィンドウが画面からはみ出している場合、画面内に収まるように調節します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.ShowDialogCenterMouse(System.Windows.Window)">
            <summary>
            マウス位置を中心にダイアログを開きます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxResult)">
            <summary>
            一般的なダイアログ表示用メソッドです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton)">
            <summary>
            一般的なダイアログ表示用メソッドです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.Show(System.String,System.String,System.Windows.MessageBoxButton)">
            <summary>
            一般的なダイアログ表示用メソッドです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.Show(System.String)">
            <summary>
            一般的なダイアログ表示用メソッドです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.ShowErrorInternal(System.Windows.Window,System.String)">
            <summary>
            エラーメッセージの表示用メソッドです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.ShowError(System.Windows.Window,System.Exception,System.String)">
            <summary>
            エラーメッセージの表示用メソッドです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.ShowError(System.Windows.Window,System.String)">
            <summary>
            エラーメッセージの表示用メソッドです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.ShowError(System.Exception,System.String)">
            <summary>
            エラーメッセージの表示用メソッドです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.ShowError(System.String)">
            <summary>
            エラーメッセージの表示用メソッドです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.ShowTimeSpanDialog(System.TimeSpan)">
            <summary>
            ダイアログから時間間隔を取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.ShowTimeSpanDialog">
            <summary>
            ダイアログから時間間隔を取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.ConvertFont(System.Drawing.Font)">
            <summary>
            Drawing.FontからFontInfoに変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.ConvertFont(Ragnarok.Presentation.FontInfo)">
            <summary>
            FontInfoからDrawing.Fontに変換します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.ShowFontDialog(Ragnarok.Presentation.FontInfo)">
            <summary>
            フォントダイアログを開き、フォントの設定を行います。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.DialogUtil.ShowColorDialog(System.Nullable{System.Windows.Media.Color},System.Windows.Window)">
            <summary>
            色選択ダイアログを表示します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Extension.FontFamilyListExtension">
            <summary>
            フォント一覧を取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Extension.FontFamilyListExtension.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Extension.FontFamilyListExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            フォント一覧を取得します。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Extension.MultiStyleExtension">
            <summary>
            複数スタイルを適用するための拡張構文です。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Extension.MultiStyleExtension.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Extension.MultiStyleExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a style that merges all styles with the keys specified in the constructor.
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Extension.MultiStyleExtension.Merge(System.Windows.Style,System.Windows.Style)">
            <summary>
            複数のスタイルをマージします。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Update.DownloadProgressWindow">
            <summary>
            DownloadProgressDialog.xaml の相互作用ロジック
            </summary>
            <summary>
            DownloadProgressWindow
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Update.DownloadProgressWindow.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Update.DownloadProgressWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Update.PresentationUpdater">
            <summary>
            ウィンドウなどを表示しながら、アプリの更新を行います。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Update.PresentationUpdater.Downloader">
            <summary>
            ダウンロード用オブジェクトを取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Update.PresentationUpdater.AssemblyTitle">
            <summary>
            アセンブリ名を取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Update.PresentationUpdater.LatestVersion">
            <summary>
            最新のアセンブリバージョンを取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Update.PresentationUpdater.InstalledVersion">
            <summary>
            インストールされているアセンブリバージョンを取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Update.PresentationUpdater.ReleaseNotesLink">
            <summary>
            リリースノートのURLを取得します。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Update.PresentationUpdater.DownloadError">
            <summary>
            ファイルのダウンロード中に発生したエラーを取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Update.PresentationUpdater.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Update.PresentationUpdater.ConfirmUpdate(System.Boolean)">
            <summary>
            ウィンドウを使って更新するかどうか確認します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Update.PresentationUpdater.ShowProgress">
            <summary>
            ダウンロードの進行度を表示します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Update.PresentationUpdater.ExecuteUpdate">
            <summary>
            実際の更新処理を行います。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Update.PresentationUpdater.Start">
            <summary>
            更新処理を開始します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Update.PresentationUpdater.Stop">
            <summary>
            更新処理を停止します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Update.PresentationUpdater.CheckToUpdate(System.TimeSpan)">
            <summary>
            更新情報の確認やダイアログの表示などを行います。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.Update.UpdateWindow">
            <summary>
            UpdateWindow.xaml の相互作用ロジック
            </summary>
            <summary>
            UpdateWindow
            </summary>
        </member>
        <member name="F:Ragnarok.Presentation.Update.UpdateWindow.IsDownloadedProperty">
            <summary>
            ファイルのダウンロードが完了しているかどうかを示す依存プロパティです。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.Update.UpdateWindow.IsDownloaded">
            <summary>
            ファイルのダウンロードが完了しているかどうかを取得または設定します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Update.UpdateWindow.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.Update.UpdateWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.WPFSettingsBase">
            <summary>
            wpfのオブジェクトも扱える設定ファイル用クラスです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFSettingsBase.TryConvertToString(System.Type,System.Object,System.String@)">
            <summary>
            値から文字列への変換を試みます。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFSettingsBase.TryConvertToValue(System.Type,System.String,System.Object@)">
            <summary>
            文字列から値への変換を試みます。
            </summary>
        </member>
        <member name="T:Ragnarok.Presentation.WPFUtil">
            <summary>
            ユーティリティクラスです。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.Init">
            <summary>
            WPFを使うための初期化処理を行います。
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.WPFUtil.IsInDesignMode">
            <summary>
            デザインモードかどうかを取得します。
            (running in Blend or Visual Studio).
            </summary>
        </member>
        <member name="P:Ragnarok.Presentation.WPFUtil.UIDispatcher">
            <summary>
            UIスレッドに関連づけられたディスパッチャーを取得します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.UIProcess(System.Action)">
            <summary>
            与えられた手続きをUIスレッド上で実行します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.InvalidateCommand">
            <summary>
            コマンドバインダをすべて更新します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.BindCommands(System.Type,System.Windows.Input.CommandBindingCollection)">
            <summary>
            <paramref name="type"/>が持つ全コマンドをバインディングします。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.GetMousePosition(System.Windows.Media.Visual)">
            <summary>
            Mouse.GetPositionにはバグがあるので、P/Invokeでマウス座標を取ります。
            </summary>
            <remarks>
            マウスのDragAndDrop中やキャプチャ中に座標を取ろうとすると
            間違った値を返してきます。
            
            参考: http://www.switchonthecode.com/tutorials/wpf-snippet-reliably-getting-the-mouse-position
            </remarks>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.MakeColor(System.Byte,System.Windows.Media.Color)">
            <summary>
            透明度だけを変えた色を作成します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.MakeVector3D(System.Windows.Point,System.Double)">
            <summary>
            Vector3Dを作成します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.MakeVector3D(System.Windows.Vector,System.Double)">
            <summary>
            Vector3Dを作成します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.MakeSizeXY(System.Windows.Media.Media3D.Size3D)">
            <summary>
            Sizeを作成します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.MakeRectXY(System.Windows.Media.Media3D.Rect3D)">
            <summary>
            Rectを作成します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.GetDepPropertyImpl(System.Type,System.String)">
            <summary>
            プロパティ名から依存プロパティを検索します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.GetDependencyProperty(System.Type,System.String)">
            <summary>
            プロパティ名から依存プロパティを検索します。
            </summary>
            <example>
            Foo.Bar.X のような指定からX依存プロパティを返します。
            </example>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.CreateDefaultMesh(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            単純な四角形のジオメトリを作成します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.SetRenderMode(System.Windows.Media.Visual,System.Boolean)">
            <summary>
            ウィンドウごとのレンダリングモードを設定します。
            </summary>
            <remarks>
            <paramref name="isSoftwareOnly"/>が真であればソフトウェアによる
            レンダリングを強制し、そうでなければハードウェアかソフトウェアの
            可能な方が使われます。
            </remarks>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.LineCircleDistance(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)">
            <summary>
            p0とp1で結ばれる直線と点cの距離を計算します。
            </summary>
            <remarks>
            ベクトルを用いて距離を計算します。
            ベクトルL = P1 - P0
            
            線分上で点Cと直交する点をP = P0 + t * Lとすると、
            (P - C)・L = 0
              (P0 - C + t * L)・L = 0
              t * |L|^2 = - (P0 - C)・L
            
            また、
            距離d = |P - C|
                  = |(P0 - C) + t * L|
            
            参考：http://homepage2.nifty.com/mathfin/distance/vector.htm
            </remarks>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.GetChildren``1(System.Windows.DependencyObject)">
            <summary>
            コントロールから指定の型の子要素をすべて検索します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.GetChild``1(System.Windows.DependencyObject)">
            <summary>
            コントロールから指定の型の子要素を検索します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.CallPropertyChanged(System.ComponentModel.PropertyChangedEventHandler,System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            必要ならGUIスレッド上でPropertyChangedを呼び出します。
            </summary>
        </member>
        <member name="M:Ragnarok.Presentation.WPFUtil.CallCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            必要ならGUIスレッド上でCollectionChangedを呼び出します。
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
